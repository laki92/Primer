;/*****************************************************
;File       : servoi.c
;Last change: 05/23/2014
;Comments   : servoi rade;
;            Treba dodati pracenje kretanja i detekciju zaglavljivanja
;            Odglavljivanje
;*****************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "modbus_slave.h"
;#include <stdlib.h>
;#include <stdio.h>
;#include <delay.h>
;#include <servoi.h>
;#include <inicijalizacija.h>
;#include <uart0.h>
;
;
;/****************Lokalne prom****************/
;unsigned char brzina_servo_H, brzina_servo_L, ugao_servo_H, ugao_servo_L;
;unsigned char sum=0;
;unsigned char checksum=0;
;char greska;
;char IdServoGreska;
;char paket1, paket2, paket4, paket6, moving, paket7;
;bit upisao = 0;
;
;/*************FUNKCIJE POTREBNE ZA RAD SERVOA*************/
;void prijem_paketa (void)
; 0002 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 001F     paket1=getchar();
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0002 0020     paket2=getchar();
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0002 0021     IdServoGreska=getchar();
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0002 0022     paket4=getchar();
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0002 0023     greska=getchar();
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0002 0024     paket6=getchar();
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0002 0025 }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;
;void prijem_paketaMoving(void)
; 0002 0028 {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0002 0029     paket1=getchar();
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0002 002A     paket2=getchar();
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0002 002B     IdServoGreska=getchar();
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 002C     paket4=getchar();
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0002 002D     greska=getchar();
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0002 002E     moving=getchar();
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0002 002F     paket7=getchar();
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0002 0030 }
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;void blokiranje_predaje (void)                        //funkcija koja blokira predaju u trenutku kada
; 0002 0033 {                                                      // posaljemo ceo paket
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0002 0034     while ( !( UCSR0A & (1<<TXC)) )   ;    //kada se posalje ceo paket onda se bit 6 registra UCSRA
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0002 0035     UCSR0B.3=0;                            // setuje na 1, potom se UCSRB.3 stavlja na 0, a to je bit koji
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0002 0036     UCSR0A.6=1;                            //iskljuci TxD i taj pin pinovo postaje PD1, a on je inicijalizovan
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0002 0037 }
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;
;void oslobadjanje_predaje (void)                 //proizvodjaca mikrokontrolera (datasheet 148 strana)
; 0002 003A {
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0002 003B     UCSR0B.3=1;                            //TxD se opet ukljucuje tako sto se UCSRB.3 bit setuje
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0002 003C }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;                                                 //proizvodjaca mikrokontrolera (datasheet 148 strana)
;void oslobadjanje_prijema (void)
; 0002 003F {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0002 0040     UCSR0B.4=1;                         // bit koji kontrolise oslobadjanje i blokiranje prijema
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0002 0041 }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;
;void blokiranje_prijema (void)
; 0002 0044 {
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0002 0045     UCSR0B.4=0;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0002 0046 }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;
;/*********************FUNKCIJE SERVOI*********************/
;
;void servo_func(unsigned int servo)
; 0002 004B {
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0002 004C     short pozicija, brzina;
; 0002 004D 
; 0002 004E     ModbusGetRegister(POZICIJA_SERVO_R, &pozicija);
;PCODE: $00000052 VOL: 0
;	servo -> Y+4
;	pozicija -> R16,R17
;	brzina -> R18,R19
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0002 004F 
; 0002 0050     ugao_servo_H=(char)(pozicija>>8);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0002 0051     ugao_servo_L=(char)(pozicija&0x00FF);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0002 0052 
; 0002 0053     ModbusGetRegister(BRZINA_SERVO_R, &brzina);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0002 0054 
; 0002 0055     brzina_servo_H=(char)(brzina>>8);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0002 0056     brzina_servo_L=(char)(brzina&0x00FF);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0002 0057 
; 0002 0058     sum=0x28 + ID1 + brzina_servo_H + brzina_servo_L + ugao_servo_H + ugao_servo_L;          ///suma iinfo=2xStart+lenght+iw+add
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0002 0059     checksum=~sum;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0002 005A 
; 0002 005B     blokiranje_prijema();
;PCODE: $00000082 VOL: 0
; 0002 005C     smer485Servo = 1;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0002 005D     oslobadjanje_predaje();
;PCODE: $00000085 VOL: 0
; 0002 005E 
; 0002 005F     putchar(START);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0002 0060     putchar(START);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0002 0061     putchar(ID1);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0002 0062     putchar(LENGTH);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0002 0063     putchar(INSTR_WRITE);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0002 0064     putchar(ADDRESS);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0002 0065     putchar(ugao_servo_L);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0002 0066     putchar(ugao_servo_H);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0002 0067     putchar(brzina_servo_L);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0002 0068     putchar(brzina_servo_H);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0002 0069     putchar(checksum);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0002 006A 
; 0002 006B     blokiranje_predaje();
;PCODE: $000000A7 VOL: 0
; 0002 006C     smer485Servo = 0;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0002 006D     oslobadjanje_prijema();
;PCODE: $000000AA VOL: 0
; 0002 006E 
; 0002 006F     prijem_paketa();
;PCODE: $000000AB VOL: 0
; 0002 0070 
; 0002 0071     oslobadjanje_predaje();
;PCODE: $000000AC VOL: 0
; 0002 0072     smer485Servo = 1;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0002 0073 }
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;
;/*******************MOVING****************************/
;void servo_moving_func(int IdServoa) //slanje poruke za dobijanja stanja moving
; 0002 0077 {
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0002 0078     sum = IdServoa+LENGTH_MOV+INSTR_WRITE_READ+ADDRESS_MOV+LENGTH_MOV_READ;//suma iinfo=2xStart+id+lenght+iw+add
;	IdServoa -> Y+0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0002 0079     checksum=~sum;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0002 007A 
; 0002 007B     blokiranje_prijema();
;PCODE: $000000BB VOL: 0
; 0002 007C     smer485Servo = 1;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0002 007D     oslobadjanje_predaje();
;PCODE: $000000BE VOL: 0
; 0002 007E 
; 0002 007F     putchar(START);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0002 0080     putchar(START);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0002 0081     putchar(IdServoa);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0002 0082     putchar(LENGTH_MOV);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0002 0083     putchar(INSTR_WRITE_READ);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0002 0084     putchar(ADDRESS_MOV);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0002 0085     putchar(LENGTH_MOV_READ);
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0002 0086     putchar(checksum);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0002 0087 
; 0002 0088     blokiranje_predaje();
;PCODE: $000000D7 VOL: 0
; 0002 0089     smer485Servo = 0;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0002 008A     oslobadjanje_prijema();
;PCODE: $000000DA VOL: 0
; 0002 008B 
; 0002 008C     prijem_paketaMoving();
;PCODE: $000000DB VOL: 0
; 0002 008D 
; 0002 008E     oslobadjanje_predaje();
;PCODE: $000000DC VOL: 0
; 0002 008F     smer485Servo = 1;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0002 0090 }
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;
;void servo_detect_moving_func(unsigned int parametar)
; 0002 0093 {
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0002 0094     servo_moving_func(1);
;	parametar -> Y+0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0002 0095 
; 0002 0096     if(moving==0x01 && upisao == 0)
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0002 0097     {
; 0002 0098         ModbusSetCoil(SERVO_MOVING,moving);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0002 0099         upisao = 1;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0002 009A     }
; 0002 009B     else if(moving == 0)
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0002 009C     {
; 0002 009D         ModbusSetCoil(SERVO_MOVING,moving);
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0002 009E         upisao = 0;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0002 009F     }
; 0002 00A0 }
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
