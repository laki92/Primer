;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.03.4 Standard
;Automatic Program Generator
;© Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : AktuatorskaMail2014
;Version : 6.1
;Date    : 05/26/2014
;Author  : Srdjan Stankovic
;Company : Memristor
;Comments: ---RX-24F servo jedan; Ide na ugao; Na Coil proveravam da li je u pokretu
;            ---Ima 6senzora daljine
;            ---pracenje naopna baterije
;
;Chip type           : ATmega128
;Program type        : Application
;Clock frequency     : 11.059000 MHz
;Memory model        : Small
;External RAM size   : 0
;Data Stack size     : 1024
;*****************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "modbus_slave.h"
;#include <stdlib.h>
;#include <delay.h>
;#include <servoi.h>
;#include <inicijalizacija.h>
;#include <uart0.h>
;#include <stdio.h>
;
;/***********************ADC***********************/
;#define ADC_VREF_TYPE 0x00
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0004 0027 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0004 0028 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0004 0029 // Delay needed for the stabilization of the ADC input voltage
; 0004 002A delay_us(10);
;PCODE: $00000012 VOL: 0
; 0004 002B // Start the AD conversion
; 0004 002C ADCSRA|=0x40;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0004 002D // Wait for the AD conversion to complete
; 0004 002E while ((ADCSRA & 0x10)==0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0004 002F ADCSRA|=0x10;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0004 0030 return ADCW;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0004 0031 }
;PCODE: $00000025 VOL: 0
;
;/*****************KONTROLA SMERA MAX485*****************/
;void DirPin(int dir)
; 0004 0035 {
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0004 0036     if(dir==1)
;	dir -> Y+0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0004 0037     {
; 0004 0038         PORTD.4=1;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0004 0039     }
; 0004 003A     else if(dir==0)
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0004 003B     {
; 0004 003C         PORTD.4=0;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0004 003D     }
; 0004 003E }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;
;void main(void)
; 0004 0041 {
;PCODE: $00000039 VOL: 0
; 0004 0042     int vbat;
; 0004 0043 // Input/Output Ports initialization
; 0004 0044 // Port A initialization
; 0004 0045 // Func7=In Func6=In Func5=In Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0004 0046 // State7=T State6=T State5=T State4=0 State3=T State2=T State1=T State0=T
; 0004 0047 PORTA=0x10;
;	vbat -> R16,R17
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0004 0048 DDRA=0x10;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0004 0049 
; 0004 004A // Port B initialization
; 0004 004B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0004 004C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0004 004D PORTB=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0004 004E DDRB=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0004 004F 
; 0004 0050 // Port C initialization
; 0004 0051 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0004 0052 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0004 0053 PORTC=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0004 0054 DDRC=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0004 0055 
; 0004 0056 // Port D initialization
; 0004 0057 // Func7=In Func6=In Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0004 0058 // State7=T State6=T State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0004 0059 PORTD=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0004 005A DDRD=0x30;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0004 005B 
; 0004 005C // Port E initialization
; 0004 005D // Func7=Out Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0004 005E // State7=0 State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0004 005F PORTE=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0004 0060 DDRE=0x80;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0004 0061 
; 0004 0062 // Port F initialization
; 0004 0063 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0004 0064 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0004 0065 PORTF=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0004 0066 DDRF=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0004 0067 
; 0004 0068 // Port G initialization
; 0004 0069 // Func4=In Func3=In Func2=In Func1=In Func0=In
; 0004 006A // State4=T State3=T State2=T State1=T State0=T
; 0004 006B PORTG=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0004 006C DDRG=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0004 006D 
; 0004 006E // Timer/Counter 0 initialization
; 0004 006F // Clock source: System Clock
; 0004 0070 // Clock value: Timer 0 Stopped
; 0004 0071 // Mode: Normal top=FFh
; 0004 0072 // OC0 output: Disconnected
; 0004 0073 ASSR=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0004 0074 TCCR0=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0004 0075 TCNT0=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0004 0076 OCR0=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0004 0077 
; 0004 0078 // Timer/Counter 1 initialization
; 0004 0079 // Clock source: System Clock
; 0004 007A // Clock value: 11059.000 kHz
; 0004 007B // Mode: CTC top=OCR1A
; 0004 007C // OC1A output: Discon.
; 0004 007D // OC1B output: Discon.
; 0004 007E // OC1C output: Discon.
; 0004 007F // Noise Canceler: Off
; 0004 0080 // Input Capture on Falling Edge
; 0004 0081 // Timer 1 Overflow Interrupt: Off
; 0004 0082 // Input Capture Interrupt: Off
; 0004 0083 // Compare A Match Interrupt: On
; 0004 0084 // Compare B Match Interrupt: Off
; 0004 0085 // Compare C Match Interrupt: Off
; 0004 0086 TCCR1A=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0004 0087 TCCR1B=0x09;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0004 0088 TCNT1H=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0004 0089 TCNT1L=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0004 008A ICR1H=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0004 008B ICR1L=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0004 008C OCR1AH=0x2B;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0004 008D OCR1AL=0x33;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0004 008E OCR1BH=0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0004 008F OCR1BL=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0004 0090 OCR1CH=0x00;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0004 0091 OCR1CL=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0004 0092 
; 0004 0093 // Timer/Counter 1 initialization
; 0004 0094 // Clock source: System Clock
; 0004 0095 // Clock value: Timer 1 Stopped
; 0004 0096 // Mode: Normal top=FFFFh
; 0004 0097 // OC1A output: Discon.
; 0004 0098 // OC1B output: Discon.
; 0004 0099 // OC1C output: Discon.
; 0004 009A // Noise Canceler: Off
; 0004 009B // Input Capture on Falling Edge
; 0004 009C // Timer 1 Overflow Interrupt: Off
; 0004 009D // Input Capture Interrupt: Off
; 0004 009E // Compare A Match Interrupt: Off
; 0004 009F // Compare B Match Interrupt: Off
; 0004 00A0 // Compare C Match Interrupt: Off
; 0004 00A1 TCCR1A=0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0004 00A2 TCCR1B=0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0004 00A3 TCNT1H=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0004 00A4 TCNT1L=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0004 00A5 ICR1H=0x00;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0004 00A6 ICR1L=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0004 00A7 OCR1AH=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0004 00A8 OCR1AL=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0004 00A9 OCR1BH=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0004 00AA OCR1BL=0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0004 00AB OCR1CH=0x00;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0004 00AC OCR1CL=0x00;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0004 00AD 
; 0004 00AE // Timer/Counter 2 initialization
; 0004 00AF // Clock source: System Clock
; 0004 00B0 // Clock value: Timer 2 Stopped
; 0004 00B1 // Mode: Normal top=FFh
; 0004 00B2 // OC2 output: Disconnected
; 0004 00B3 TCCR2=0x00;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0004 00B4 TCNT2=0x00;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0004 00B5 OCR2=0x00;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0004 00B6 
; 0004 00B7 // Timer/Counter 3 initialization
; 0004 00B8 // Clock source: System Clock
; 0004 00B9 // Clock value: Timer 3 Stopped
; 0004 00BA // Mode: Normal top=FFFFh
; 0004 00BB // Noise Canceler: Off
; 0004 00BC // Input Capture on Falling Edge
; 0004 00BD // OC3A output: Discon.
; 0004 00BE // OC3B output: Discon.
; 0004 00BF // OC3C output: Discon.
; 0004 00C0 // Timer 3 Overflow Interrupt: Off
; 0004 00C1 // Input Capture Interrupt: Off
; 0004 00C2 // Compare A Match Interrupt: Off
; 0004 00C3 // Compare B Match Interrupt: Off
; 0004 00C4 // Compare C Match Interrupt: Off
; 0004 00C5 TCCR3A=0x00;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0004 00C6 TCCR3B=0x00;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0004 00C7 TCNT3H=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0004 00C8 TCNT3L=0x00;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0004 00C9 ICR3H=0x00;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0004 00CA ICR3L=0x00;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0004 00CB OCR3AH=0x00;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0004 00CC OCR3AL=0x00;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0004 00CD OCR3BH=0x00;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0004 00CE OCR3BL=0x00;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0004 00CF OCR3CH=0x00;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0004 00D0 OCR3CL=0x00;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0004 00D1 
; 0004 00D2 // External Interrupt(s) initialization
; 0004 00D3 // INT0: Off
; 0004 00D4 // INT1: Off
; 0004 00D5 // INT2: Off
; 0004 00D6 // INT3: Off
; 0004 00D7 // INT4: Off
; 0004 00D8 // INT5: Off
; 0004 00D9 // INT6: Off
; 0004 00DA // INT7: Off
; 0004 00DB EICRA=0x00;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0004 00DC EICRB=0x00;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0004 00DD EIMSK=0x00;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0004 00DE 
; 0004 00DF // Timer(s)/Counter(s) Interrupt(s) initialization
; 0004 00E0 TIMSK=0x00;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0004 00E1 ETIMSK=0x00;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0004 00E2 
; 0004 00E3 // USART0 initialization
; 0004 00E4 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0004 00E5 // USART0 Receiver: On
; 0004 00E6 // USART0 Transmitter: On
; 0004 00E7 // USART0 Mode: Asynchronous
; 0004 00E8 // USART0 Baud Rate: 57600
; 0004 00E9 UCSR0A=0x00;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0004 00EA UCSR0B=0x98;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0004 00EB UCSR0C=0x06;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0004 00EC UBRR0H=0x00;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0004 00ED UBRR0L=0x0B;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0004 00EE 
; 0004 00EF // ADC initialization
; 0004 00F0 // ADC Clock frequency: 691.188 kHz
; 0004 00F1 // ADC Voltage Reference: AREF pin
; 0004 00F2 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0004 00F3 ADCSRA=0x84;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0004 00F4 
; 0004 00F5 // Analog Comparator initialization
; 0004 00F6 // Analog Comparator: Off
; 0004 00F7 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0004 00F8 ACSR=0x80;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0004 00F9 SFIOR=0x00;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0004 00FA 
; 0004 00FB // Global enable interrupts
; 0004 00FC #asm("sei")
;PCODE: $000000C8 VOL: 0
	sei
;PCODE: $000000C9 VOL: 0
; 0004 00FD 
; 0004 00FE ModbusSlaveInit(1, DirPin);//ime slave, id
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0004 00FF 
; 0004 0100 /********************Dogadjaji Coil**********************************/
; 0004 0101 ModbusSetCoilChangeEvent(SERVO_MOV_CHECK, servo_detect_moving_func);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0004 0102 
; 0004 0103 /******************Dogadjaji Register*******************************/
; 0004 0104 ModbusSetRegisterChangeEvent(POZICIJA_SERVO_R, servo_func);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0004 0105 
; 0004 0106 while (1)
;PCODE: $000000D9 VOL: 0
; 0004 0107       {
; 0004 0108         ModbusEventDispatcher();
;PCODE: $000000DA VOL: 0
; 0004 0109 
; 0004 010A         /************Napon baterije***************/
; 0004 010B         vbat=read_adc(4);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0004 010C         vbat=10*(kostantaVbat*vbat);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0004 010D 
; 0004 010E         ModbusSetRegister(VBAT_R,vbat);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0004 010F 
; 0004 0110         /************Senzori***************/
; 0004 0111         if(sensor1==1)
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0004 0112             ModbusSetCoil(SENSOR1,1);
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0004 0113         else
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0004 0114             ModbusSetCoil(SENSOR1,0);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0004 0115 
; 0004 0116         if(sensor2==1)
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0004 0117             ModbusSetCoil(SENSOR2,1);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0004 0118         else
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0004 0119             ModbusSetCoil(SENSOR2,0);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0004 011A 
; 0004 011B         if(sensor3==1)
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0004 011C             ModbusSetCoil(SENSOR3,1);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0004 011D         else
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0004 011E             ModbusSetCoil(SENSOR3,0);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0004 011F 
; 0004 0120         if(sensor4==1)
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0004 0121             ModbusSetCoil(SENSOR4,1);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0004 0122         else
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0004 0123             ModbusSetCoil(SENSOR4,0);
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0004 0124 
; 0004 0125         if(sensor5==1)
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0004 0126             ModbusSetCoil(SENSOR5,1);
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0004 0127         else
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0004 0128             ModbusSetCoil(SENSOR5,0);
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0004 0129 
; 0004 012A         if(sensor6==1)
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0004 012B             ModbusSetCoil(SENSOR6,1);
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0004 012C         else
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0004 012D             ModbusSetCoil(SENSOR6,0);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0004 012E 
; 0004 012F 
; 0004 0130         /************prekidaci**************/
; 0004 0131         if(prekidac1==1)
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0004 0132             ModbusSetCoil(PREKIDAC1,1);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0004 0133         else
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0004 0134             ModbusSetCoil(PREKIDAC1,0);
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0004 0135 
; 0004 0136         if(prekidac2==1)
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0004 0137             ModbusSetCoil(PREKIDAC2,1);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0004 0138         else
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0004 0139             ModbusSetCoil(PREKIDAC2,0);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0004 013A 
; 0004 013B         /************senzor toruglovi**************/
; 0004 013C         if(sensorTrouglovi==1)
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0004 013D             ModbusSetCoil(SENSOR_TROUGLOVI,1);
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0004 013E         else
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0004 013F             ModbusSetCoil(SENSOR_TROUGLOVI,0);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0004 0140 
; 0004 0141       };
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0004 0142 }
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
